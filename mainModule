#Область Методы

Функция ПолучитьСпиокСообщений() Экспорт
	cmd=" ";
	Результат = getUpdates(Константы.update_id.Получить() + 1);
	Если Результат.Свойство("ok") И Результат.ok = Истина Тогда
		Если Результат.Свойство("result") Тогда
			Для каждого НовоеСообщение Из Результат.result Цикл
				Если НовоеСообщение.Свойство("message") И НовоеСообщение.message.Свойство("chat") Тогда
					chat = НовоеСообщение.message.chat;	
					id = chat.id;
					Константы.update_id.Установить(НовоеСообщение.update_id);//запоминаем ИД последнего сообщения
					Если ЧерныйСписок(id)=1 Тогда
						Прервать;
					КонецЕсли;
					cmd = cmdTelegram(НовоеСообщение.message);
					ЗаписатьИсториюСообщений(НовоеСообщение.message, id , cmd);					 
					answerUser(cmd,НовоеСообщение.message, id);
				КонецЕсли; 
			КонецЦикла; 	
		КонецЕсли; 
	КонецЕсли; 
	Возврат Результат;
КонецФункции


Функция ПолучитьТелефон() Экспорт
	cmd=" ";
	Результат = getUpdates(Константы.update_id.Получить() + 1);
	
	Если Результат.Свойство("ok") И Результат.ok = Истина Тогда
		Если Результат.Свойство("result") Тогда
			Для каждого НовоеСообщение Из Результат.result Цикл
				Если НовоеСообщение.Свойство("message") И НовоеСообщение.message.Свойство("chat")И НовоеСообщение.message.contact.Свойство("phone_number") Тогда
					chat = НовоеСообщение.message.chat;	
					id = chat.id;
					number = НовоеСообщение.message.contact.phone_number;
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = number;
					Сообщение.Сообщить(); 
					ЗаписатьИсториюСообщений(НовоеСообщение.message,id, cmd);
					sendMessage(id, "I get it, милорд");
					Константы.update_id.Установить(НовоеСообщение.update_id);
				КонецЕсли; 
			КонецЦикла; 	
		КонецЕсли; 
	КонецЕсли; 
	Возврат number;
КонецФункции

Функция ОтправитьФайл()
	
	    ТабДок = Новый ТабличныйДокумент;
		
		Отчеты.ИсторияСообщений.Создать().СкомпоноватьРезультат(ТабДок);
		
		ИмяФайла = ПолучитьИмяВременногоФайла("xlsx");
		
		ТабДок.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.XLSX);
		
			 
КонецФункции
 
#КонецОбласти

Функция ЧерныйСписок(id)
	Если id=332098663 Тогда
		sendMessage(id,"Я не хочу с вами разговаривать, вы спамите, Толя!");
		Возврат 1;
	КонецЕсли;
	Возврат 0;
КонецФункции



#Область TelegramAPI

// Функция - Get updates
//
// Параметры:
//  offset	 - 	 - 
//  limit	 - 	 - 
//  timeout	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция getUpdates(offset = 0, limit = 0, timeout = 0) Экспорт
	
	method_param = Новый Массив;
	Если offset > 0 Тогда
		method_param.Добавить("offset=" + ФорматироватьСтроку(offset));
	КонецЕсли; 
	Если limit > 0 Тогда
		method_param.Добавить("limit=" + ФорматироватьСтроку(limit));
	КонецЕсли; 
	Если timeout > 0 Тогда
		method_param.Добавить("timeout=" + ФорматироватьСтроку(timeout));
	КонецЕсли; 
	
	Результат = ОтправитьHTTPЗапрос(ПолучитьAccessToken(), "getUpdates", method_param);
	
	Возврат ДесериализацияJS(Результат);
КонецФункции

Функция sendMessage(chat_id, text, parse_mode = Неопределено, disable_web_page_preview = Неопределено, disable_notification = Неопределено, reply_to_message_id = 0, reply_markup = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(chat_id) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	method_param = Новый Массив;
	method_param.Добавить("chat_id=" + ФорматироватьСтроку(chat_id));
	method_param.Добавить("text=" + text);
	Результат = ОтправитьHTTPЗапрос(ПолучитьAccessToken(), "sendMessage", method_param);
	
	Возврат ДесериализацияJS(Результат);
КонецФункции

#КонецОбласти 

#Область WEB

#Область Интерфейс

Функция ОтправитьHTTPЗапрос(access_token, method, method_param = Неопределено, Данные = Неопределено) Экспорт
	
	Результат = Неопределено;
	СтруктураНастроек = ОбщиеКоманды.ПолучитьНастройкиTelegram();
	Попытка
		ssl = Новый ЗащищенноеСоединениеOpenSSL();		
		//Прокси = Новый ИнтернетПрокси;
		//Прокси.Установить("https","88.151.116.223",49202);
		СоединениеHTTP = Новый HTTPСоединение("api.telegram.org",443,,,,,ssl);
		
		ПараметрыЗапроса = Новый Соответствие;
		ПараметрыЗапроса.Вставить("access_token", access_token);
		ПараметрыЗапроса.Вставить("method", method);
		ПараметрыЗапроса.Вставить("method_param", method_param);
		
		HTTPЗапрос = Новый HTTPЗапрос;
		Если Данные = Неопределено Тогда
			HTTPЗапрос.Заголовки.Вставить("Content-type", "application/json");
		Иначе
			HTTPЗапрос.Заголовки.Вставить("Content-type", "multipart/form-data; boundary=" + Данные["Boundary"]);
			
			ТекстЗапроса = СформироватьТекстЗапроса(Данные);
			HTTPЗапрос.УстановитьТелоИзСтроки(ТекстЗапроса, КодировкаТекста.ANSI, ИспользованиеByteOrderMark.НеИспользовать);
		КонецЕсли; 
		HTTPЗапрос.АдресРесурса = СформироватьМетод(ПараметрыЗапроса);
	
		Если Данные = Неопределено Тогда
			РезультатЗапроса = СоединениеHTTP.Получить(HTTPЗапрос); 		
		Иначе	
			РезультатЗапроса = СоединениеHTTP.ОтправитьДляОбработки(HTTPЗапрос);
		КонецЕсли; 
		
		Если РезультатЗапроса.КодСостояния = 200 Тогда
			Результат = РезультатЗапроса.ПолучитьТелоКакСтроку();
		//Иначе
		//	Сообщение = Новый СообщениеПользователю;
		//	Сообщение.Текст = РезультатЗапроса.ПолучитьТелоКакСтроку();
		//	Сообщение.Сообщить(); 
		КонецЕсли; 
		
	Исключение
		//Сообщение = Новый СообщениеПользователю;
		//Сообщение.Текст = ОписаниеОшибки();
		//Сообщение.Сообщить(); 
	КонецПопытки; 
	
	Возврат Результат;
КонецФункции

Функция getUserTelegram(ИмяПользователяТелеграм,ID_Пользователя, НомерТелефона)
      Запрос = Новый Запрос;
	  Запрос.Текст = "ВЫБРАТЬ
	                 |	Telegram_Пользователи.Пользователь КАК Пользователь
	                 |ИЗ
	                 |	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи
	                 |ГДЕ
	                 |	Telegram_Пользователи.НомерТелефона = &НомерТелефона";
	  Запрос.УстановитьПараметр("НомерТелефона",НомерТелефона);
	  ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	  
	  Запрос2= Новый Запрос;
	  Запрос2.Текст =    "ВЫБРАТЬ
	                     |	Telegram_Пользователи.Пользователь КАК Пользователь
	                     |ИЗ
	                     |	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи
	                     |ГДЕ
	                     |	Telegram_Пользователи.ID_Пользователя = &ID_Пользователя";
	  Запрос2.УстановитьПараметр("ID_Пользователя",ID_Пользователя);
	  ВыборкаЗапроса2 = Запрос2.Выполнить().Выбрать();
	  Если ВыборкаЗапроса.Количество()>0 Тогда
	       ВыборкаЗапроса.Следующий();
	  	   Возврат ВыборкаЗапроса.Пользователь;
	  ИначеЕсли
			ВыборкаЗапроса2.Количество()>0 Тогда
		    ВыборкаЗапроса2.Следующий();
		  	Возврат ВыборкаЗапроса2.Пользователь;
	  Иначе
		   МенеджерЗаписи = РегистрыСведений.Telegram_Пользователи.СоздатьМенеджерЗаписи();
		   МенеджерЗаписи.ИмяПользователяТелеграм = ИмяПользователяТелеграм;
		   МенеджерЗаписи.ID_Пользователя =  ID_Пользователя;
		   МенеджерЗаписи.НомерТелефона = НомерТелефона;
		   МенеджерЗаписи.Пользователь = ИмяПользователяТелеграм;
		   МенеджерЗаписи.Записать(Истина);		   
		   Возврат Справочники.Users.ПустаяСсылка();
	  КонецЕсли;  
	 
КонецФункции 
//Запись истории сообщений
Процедура ЗаписатьИсториюСообщений(message, ID_Сообщения, cmd)
	
	МенеджерЗаписи = РегистрыСведений.Telegram_ИсторияСообщений.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДата();
	МенеджерЗаписи.ID = ID_Сообщения;
	Попытка
		МенеджерЗаписи.Сообщение = СокрЛП(message.text);
	Исключение
	    МенеджерЗаписи.Сообщение = "";
	КонецПопытки;
	
	Попытка
		имя=message.chat.first_name;
	Исключение
		имя="";
	КонецПопытки;
	
	Попытка
		фамилия=message.chat.last_name;
	Исключение
		фамилия="";
	КонецПопытки;
	
	Попытка
		телефон=message.contact.phone_number;
		МенеджерЗаписи.НомерТелефона = телефон;
		ТГЮзер = РегистрыСведений.Telegram_Пользователи.СоздатьМенеджерЗаписи();
		ТГЮзер.ID_Пользователя=ID_Сообщения;
		ТГЮзер.НомерТелефона = телефон;
		ТГЮзер.ИмяПользователяТелеграм = имя+" "+фамилия;
		ТГЮзер.Записать();
	Исключение
		телефон="-";
	КонецПопытки;
	МенеджерЗаписи.Пользователь = ИдентифицироватьПользователя(ID_Сообщения, телефон);
	МенеджерЗаписи.Команда=cmd;
	МенеджерЗаписи.ВидСообщения = Перечисления.ВидСообщения.Входящее;
	Если НЕ МенеджерЗаписи.Пользователь= Справочники.Users.ПустаяСсылка() И НЕ телефон="-" Тогда
		Текст = "Вам доступны команды, содержащиеся в справке /help, а также" + Символы.ПС + 
		"/payment - данные о займе," + Символы.ПС+"/call - звонок оператора," + Символы.ПС +"/info - данные о компании";
		sendMessage(ID_Сообщения,Текст); 
	КонецЕсли;
	//МенеджерЗаписи.Пользователь = getUserTelegram(фамилия + " " + имя, message.chat.id, телефон);
	МенеджерЗаписи.Записать(Истина);
	
	//АктуализироватьТГ();
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция СформироватьМетод(ПараметрыЗапроса)
	Стр = "";
	ПараметрыМетода = "";
	
	Если ЗначениеЗаполнено(ПараметрыЗапроса["method_param"]) Тогда
		Для каждого Строка Из ПараметрыЗапроса["method_param"] Цикл
			ПараметрыМетода = ПараметрыМетода + Строка + "&";
		КонецЦикла; 
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ПараметрыМетода) Тогда
		Стр = "bot" + ПараметрыЗапроса["access_token"] + "/" + ПараметрыЗапроса["method"] + "?";
		Стр = Стр + ПараметрыМетода;
	Иначе
		Стр = "bot" + ПараметрыЗапроса["access_token"] + "/" + ПараметрыЗапроса["method"];
	КонецЕсли; 
	
	Возврат Стр;
КонецФункции

Функция ЗаписьJSON(СтруктураДанных, ФормироватьСПереносами = Ложь) Экспорт  //Запись JSON
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	Если ФормироватьСПереносами Тогда
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	Иначе
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб));
	КонецЕсли; 
	
	НастройкиСериализацииJSON = Новый НастройкиСериализацииJSON;
	НастройкиСериализацииJSON.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.ЛокальнаяДатаСоСмещением;
	НастройкиСериализацииJSON.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
	
	ЗаписатьJSON(ЗаписьJSON, СтруктураДанных, НастройкиСериализацииJSON);
	
	Возврат ЗаписьJSON.Закрыть();
КонецФункции
 
Функция ДесериализацияJS(СтрокаJSON) Экспорт 
	СтруктураВозврата = Новый Структура;
	
	Попытка
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(СтрокаJSON);		
		
		СтруктураВозврата = ПрочитатьJSON(Чтение);
	Исключение
	КонецПопытки; 
	Возврат СтруктураВозврата;
КонецФункции
  
Функция ФорматироватьСтроку(ТекущееЗначение) Экспорт
	Возврат Формат(ТекущееЗначение, "ЧРГ=''; ЧГ=0");
КонецФункции

Функция СформироватьТекстЗапроса(Данные)
	
	ТекстЗапроса = "";
	
	ТекстЗапроса = ТекстЗапроса + "--" + Данные["Boundary"] + Символы.ВК + Символы.ПС;
	ТекстЗапроса = ТекстЗапроса + "Content-Disposition: form-data; name=""" + Данные["name"] + """; filename=""" + Данные["ИмяФайла"] + """" + Символы.ВК + Символы.ПС;
	ТекстЗапроса = ТекстЗапроса + "Content-Type: application/x-zip-compressed" + Символы.ВК + Символы.ПС + Символы.ВК + Символы.ПС; 
	
	ДвоичныеДанныеСтрокой = ПолучитьДвоичныеДанныеВСтрокуБезКодирования(Данные["ИмяФайлаПолное"]);
	
	ТекстЗапроса = ТекстЗапроса + ДвоичныеДанныеСтрокой + Символы.ВК + Символы.ПС;
	
	ТекстЗапроса = ТекстЗапроса + "--" + Данные["Boundary"] + "--" + Символы.ВК + Символы.ПС;
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ПолучитьДвоичныеДанныеВСтрокуБезКодирования(ИмяФайлаПолное)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ИмяФайлаПолное, КодировкаТекста.ANSI, Символы.ПС);
	
	Возврат ТекстовыйДокумент.ПолучитьТекст();
КонецФункции


#КонецОбласти 


#Область Переопределяемые

Функция ПолучитьAccessToken()
	Возврат "962023807:AAGXhMj2Nn6a5-X-6Rn56df8hDoIKyQw1ZM";
КонецФункции

Функция ПолучитьПутьКФайлуЛога()
	Возврат "D:\log.txt";
КонецФункции

#КонецОбласти

#КонецОбласти 


Функция cmdTelegram(Сообщение)
	Попытка 
		КомандаБота=Сообщение.text;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		 |	КомандыСистемы.Ссылка КАК Ссылка
		 |ИЗ
		 |	Справочник.КомандыСистемы КАК КомандыСистемы
		 |ГДЕ
		 |	КомандыСистемы.КомандаБота = &КомандаБота";
	  Запрос.УстановитьПараметр("КомандаБота",НРег(КомандаБота));
	  ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	  Если ВыборкаЗапроса.Количество()>0 Тогда
	       ВыборкаЗапроса.Следующий();
	  	   Возврат ВыборкаЗапроса.Ссылка;
	   Иначе
		   Возврат Справочники.КомандыСистемы.ПустаяСсылка();
	  КонецЕсли;  
	Исключение 
		Возврат Справочники.КомандыСистемы.ПустаяСсылка();
	КонецПопытки;
      
	 
  КонецФункции
  
  
Функция Авторизация(chat_id)Экспорт
	
	text="Для авторизации Вам необходимо отправить свой номер телефона!";	
	МассивКнопок = Новый Массив;
	МассивКнопок.Добавить("Отправить свой контакт ☎");
	Кнопки = Новый Массив;
	Для каждого кнопка ИЗ МассивКнопок Цикл
		Кнопки.Добавить(Новый Структура("text, request_contact", кнопка, True));                          
	КонецЦикла;
	Строки = Новый Массив;
	Строки.Добавить(Кнопки);
	reply_markup = ЗаписьJSON
	  (Новый Структура("keyboard, resize_keyboard, one_time_keyboard", Строки, True, True));
	method_param = Новый Массив;
	method_param.Добавить("chat_id=" + ФорматироватьСтроку(chat_id));
	method_param.Добавить("text=" + text);
	method_param.Добавить("reply_markup=" + reply_markup);
		
	Результат = ОтправитьHTTPЗапрос(ПолучитьAccessToken(), "sendMessage", method_param);
	
	Возврат ДесериализацияJS(Результат);
КонецФункции

Процедура answerUser(Команда,message,id)   //обработка команд     
	Попытка 
	Если message.text="/start" Тогда
		answer = "Я чат-бот, приветствую вас!" + Символы.ПС + 
		"Для ознакомления с доступными командами: /help";
	Иначе		
		ИмяФайла = "";
		answer = "";                                                                                                          
		Выполнить(Команда.КодОбработки);
	КонецЕсли;
	Исключение
	answer = "Сообщение получено!";
	КонецПопытки;
	sendMessage(id, answer);
	//ЗаписатьИсториюОтветов(ОтветСистемы,Команда,СообщениеID);
КонецПроцедуры

Функция ИдентифицироватьПользователя(ID_Пользователя, НомерТелефона)
Пользователь = Справочники.Users.ПустаяСсылка();
 Запрос1= Новый Запрос;
    Запрос1.Текст =
    "ВЫБРАТЬ
    |    Users.Ссылка  КАК Users
    |ИЗ
    |    Справочник.Users КАК Users
    |ГДЕ
    |    Users.ЭтоГруппа = ИСТИНА";
    ТЗГрупп=Запрос1.Выполнить().Выгрузить();
    
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Users.Ссылка КАК Users
    |ИЗ
    |    Справочник.Users КАК Users
    |ГДЕ
    |    Users.ЭтоГруппа = ЛОЖЬ
    |    И Users.Родитель = &Родитель";
    Для каждого СтрГруппа ИЗ ТЗГрупп Цикл
        Запрос.УстановитьПараметр("Родитель",СтрГруппа.Users);   
        РезультатЗапроса=Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();
        сч=0;
        Пока Выборка.Следующий() Цикл
            сч=сч+1;
            user = Выборка.Users.ПолучитьОбъект();
			Если user.НомерТелефона = НомерТелефона Тогда
				user.ID = ID_Пользователя;
				Пользователь = user.Ссылка;
			КонецЕсли;
			Если user.ID = ID_Пользователя Тогда
				 Пользователь = user.Ссылка;
				 //Менеджер = РегистрыСведений.Telegram_ИсторияСообщений.СоздатьМенеджерЗаписи();
				 //Менеджер.Пользователь.НомерТелефона = user.НомерТелефона;
				 //Менеджер.Записать();
			КонецЕсли;
            Попытка
                user.Записать();
            Исключение
				//Сообщить (ОписаниеОшибки());
			КонецПопытки;
			//Возврат Пользователь;
        КонецЦикла;
	КонецЦикла;
	Возврат Пользователь;
	КонецФункции

Процедура АктуализироватьТГ()
	
 Запрос1= Новый Запрос;
    Запрос1.Текст =
    "ВЫБРАТЬ
    |    Users.Ссылка  КАК Users
    |ИЗ
    |    Справочник.Users КАК Users
    |ГДЕ
    |    Users.ЭтоГруппа = ИСТИНА";
    ТЗГрупп=Запрос1.Выполнить().Выгрузить();
    
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Users.Ссылка КАК Users
    |ИЗ
    |    Справочник.Users КАК Users
    |ГДЕ
    |    Users.ЭтоГруппа = ЛОЖЬ
    |    И Users.Родитель = &Родитель";
	
	ТГюзер = Новый Запрос;
	ТГюзер.Текст = "ВЫБРАТЬ
	               |	Telegram_Пользователи.ИмяПользователяТелеграм КАК ИмяПользователяТелеграм,
	               |	Telegram_Пользователи.ID_Пользователя КАК ID_Пользователя,
	               |	Telegram_Пользователи.Пользователь КАК Пользователь,
	               |	Telegram_Пользователи.НомерТелефона КАК НомерТелефона
	               |ИЗ
	               |	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи" ;
	Юзеры = ТГюзер.Выполнить().Выбрать();
	Для каждого Юзер ИЗ Юзеры Цикл
		//счетчик = 0;
		//Пока Юзеры.Следующий() Цикл
		//	счетчик = счетчик+1;
		    Для каждого СтрГруппа ИЗ ТЗГрупп Цикл
		        Запрос.УстановитьПараметр("Родитель",СтрГруппа.Пользователи);   
		        РезультатЗапроса=Запрос.Выполнить();
		        Выборка = РезультатЗапроса.Выбрать();
		        сч=0;
		        Пока Выборка.Следующий() Цикл
		            сч=сч+1;
		            user = Выборка.Пользователи.ПолучитьОбъект();
					Если user.НомерТелефона = Юзер.НомерТелефона Тогда
						МенеджерЗаписи = РегистрыСведений.Telegram_Пользователи.СоздатьМенеджерЗаписи();
						МенеджерЗаписи.Пользователь = user;
						МенеджерЗаписи.Записать();
					КонецЕсли;
		            Попытка
		                user.Записать();
		            Исключение
						//Сообщить (ОписаниеОшибки());
		            КонецПопытки;
		        КонецЦикла;
			КонецЦикла;
		//КонецЦикла;
	КонецЦикла;

КонецПроцедуры
